{"version":3,"sources":["components/Task.js","components/TaskList.js","components/Footer.js","components/NewTaskForm.js","components/App.js","index.js"],"names":["Task","props","handleChange","e","setState","editValue","target","value","state","data","label","time","this","tick","timerID","setInterval","clearInterval","formatDistanceToNow","Date","onDelete","onToggleDone","onEdit","offEdit","id","done","editing","classes","cn","completed","className","type","checked","onChange","onClick","onSubmit","name","React","Component","list","map","item","key","Footer","children","clearAll","itemsLeft","TasksFilter","filter","activeFilter","buttons","selected","NewTaskForm","handleInput","clear","addItem","placeholder","autoFocus","App","currentId","otherProps","val","preventDefault","clearCallback","newItem","uniqid","now","i","length","filteredData","TaskList","ReactDOM","render","document","getElementById"],"mappings":"oRAIqBA,E,kDACnB,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAORC,aAAe,SAACC,GACd,EAAKC,SAAS,CACZC,UAAWF,EAAEG,OAAOC,SARtB,EAAKC,MAAQ,CACXH,UAAWJ,EAAMQ,KAAKC,MACtBC,KAAMV,EAAMQ,KAAKE,MAJF,E,gEAcE,IAAD,OAClBC,KAAKC,OACLD,KAAKE,QAAUC,aACb,kBAAM,EAAKF,SACX,O,6CAKFG,cAAcJ,KAAKE,W,6BAGb,IACEH,EAASC,KAAKX,MAAMQ,KAApBE,KACRC,KAAKR,SAAS,CACZO,KAAMM,YAAoB,IAAIC,KAAKP,Q,+BAI7B,IAAD,EACqBC,KAAKJ,MAAzBH,EADD,EACCA,UAAWM,EADZ,EACYA,KADZ,EAEmDC,KAAKX,MAAvDQ,EAFD,EAECA,KAAMU,EAFP,EAEOA,SAAUC,EAFjB,EAEiBA,aAAcC,EAF/B,EAE+BA,OAAQC,EAFvC,EAEuCA,QACtCZ,EAA6BD,EAA7BC,MAAOa,EAAsBd,EAAtBc,GAAIC,EAAkBf,EAAlBe,KAAMC,EAAYhB,EAAZgB,QACnBC,EAAUC,IAAG,CACjBC,UAAWJ,EACXC,QAASA,IAEX,OACE,wBAAII,UAAWH,EAASH,GAAIA,GAC1B,yBAAKM,UAAU,QACb,2BAAOA,UAAU,SAASC,KAAK,WAAWC,QAASP,EAAMQ,SAAUZ,IACnE,+BACE,0BAAMS,UAAU,eAAenB,GAC/B,0BAAMmB,UAAU,WAAhB,WAAmClB,EAAnC,SAEF,4BAAQkB,UAAU,iBAAiBI,QAASZ,IAC5C,4BAAQQ,UAAU,oBAAoBI,QAASd,KAEhDM,GAAW,0BAAMI,UAAU,kBAAkBK,SAAUZ,EAAQC,EAAIlB,IAClE,2BACE8B,KAAK,QACLL,KAAK,OACLD,UAAU,OACVtB,MAAOF,EACP2B,SAAUpB,KAAKV,eACjB,4BAAQ4B,KAAK,UAAb,Y,GA5DwBM,IAAMC,WCDzB,cAAwD,IAArD5B,EAAoD,EAApDA,KAAMU,EAA8C,EAA9CA,SAAUC,EAAoC,EAApCA,aAAcC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAChDgB,EAAO7B,EAAK8B,KAAI,SAACC,GAAD,OAAU,kBAAC,EAAD,CAC9BC,IAAKD,EAAKjB,GACVd,KAAM+B,EACNrB,SAAUA,EAASqB,EAAKjB,IACxBH,aAAcA,EAAaoB,EAAKjB,IAChCF,OAAQA,EAAOmB,EAAKjB,IACpBD,QAASA,OACX,OACE,wBAAIO,UAAU,aACXS,ICWcI,E,uKAGT,IAAD,EACmC9B,KAAKX,MAAvC0C,EADD,EACCA,SAAUC,EADX,EACWA,SAAUC,EADrB,EACqBA,UAC5B,OACE,4BAAQhB,UAAU,UAChB,0BAAMA,UAAU,cAAcgB,IAA9B,eACCF,EACD,4BAAQd,UAAU,kBAAkBI,QAASW,GAA7C,wB,GAT4BR,IAAMC,WAArBK,EACZI,YAtBW,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,OAAQC,EAAmB,EAAnBA,aACvBC,EAAU,CACd,CAAEvC,MAAO,MAAOa,GAAI,OACpB,CAAEb,MAAO,SAAUa,GAAI,UACvB,CAAEb,MAAO,YAAaa,GAAI,cAC1BgB,KAAI,YAAoB,IAAjB7B,EAAgB,EAAhBA,MAAOa,EAAS,EAATA,GACRG,EAAUC,IAAG,CACjBuB,SAAUF,IAAiBzB,IAE7B,OAAO,wBAAIkB,IAAKlB,GACd,4BAAQM,UAAWH,EAASH,GAAIA,GAAKb,OAIzC,OACE,wBAAImB,UAAU,UAAUI,QAASc,GAC9BE,I,ICjBcE,E,kDACnB,WAAYlD,GAAQ,IAAD,8BACjB,cAAMA,IAMRmD,YAAc,SAACjD,GACb,EAAKC,SAAS,CACZG,MAAOJ,EAAEG,OAAOC,SATD,EAanB8C,MAAQ,WACN,EAAKjD,SAAS,CACZG,MAAO,MAbT,EAAKC,MAAQ,CACXD,MAAO,IAHQ,E,qDAmBT,IACAA,EAAUK,KAAKJ,MAAfD,MACA+C,EAAY1C,KAAKX,MAAjBqD,QACR,OACE,0BAAMzB,UAAU,iBAAiBK,SAAUoB,EAAQ/C,EAAOK,KAAKyC,QAC7D,2BACExB,UAAU,WACV0B,YAAY,yBACZC,WAAS,EAACjD,MAAOA,EACjByB,SAAUpB,KAAKwC,cACjB,4BAAQtB,KAAK,UAAb,Y,GA9BiCM,IAAMC,W,gBCI1BoB,E,kDACnB,WAAYxD,GAAQ,IAAD,8BACjB,cAAMA,IAORmB,aAAe,SAACsC,GAAD,OAAe,WAC5B,EAAKtD,UAAS,YASZ,MAAQ,CACNK,KAVwB,EAAXA,KACM8B,KAAI,SAACC,GAAU,IAC1BhB,EAAuBgB,EAAvBhB,KAASmC,EADgB,YACFnB,EADE,UAEjC,OAAIA,EAAKjB,KAAOmC,EAAkB,2BAC7BC,GADsB,IAEzBnC,MAAOA,IAEFgB,WAhBM,EAwBnBnB,OAAS,SAACqC,GAAD,OAAe,SAACvD,GACvB,EAAKC,UAAS,YASZ,MAAQ,CACNK,KAVwB,EAAXA,KACM8B,KAAI,SAACC,GAAU,IAC1Bf,EAA0Be,EAA1Bf,QAAYkC,EADa,YACCnB,EADD,aAEjC,OAAIA,EAAKjB,KAAOmC,EAAkB,2BAC7BC,GADsB,IAEzBlC,SAAUA,IAELe,WAhCM,EAwCnBlB,QAAU,SAACoC,EAAWE,GAAZ,OAAoB,SAACzD,GAC7BA,EAAE0D,iBACU,KAARD,GACJ,EAAKxD,UAAS,YAUZ,MAAQ,CACNK,KAXwB,EAAXA,KACM8B,KAAI,SAACC,GAAU,IAC1Bf,EAAiCe,EAAjCf,QAAmBkC,GAAcnB,EAAxB9B,MADgB,YACQ8B,EADR,sBAEjC,OAAIA,EAAKjB,KAAOmC,EAAkB,2BAC7BC,GADsB,IAEzBlC,SAAUA,EACVf,MAAOkD,IAEFpB,WAnDM,EA2DnBrB,SAAW,SAACuC,GAAD,OAAe,WACxB,EAAKtD,UAAS,kBAAe,CAC3BK,KADY,EAAGA,KACJsC,QAAO,gBAAGxB,EAAH,EAAGA,GAAH,OAAYmC,IAAcnC,WA7D7B,EAiEnBwB,OAAS,SAAC5C,GACR,EAAKC,SAAS,CACZ4C,aAAc7C,EAAEG,OAAOiB,MAnER,EAuEnB+B,QAAU,SAACM,EAAKE,GAAN,OAAwB,SAAC3D,GACjCA,EAAE0D,iBACU,KAARD,GACJ,EAAKxD,UAAS,YAAe,IAAZK,EAAW,EAAXA,KACTsD,EAAU,CACdrD,MAAOkD,EACPrC,GAAIyC,MACJrD,KAAMO,KAAK+C,MACXzC,MAAM,EACNC,SAAS,GAGX,OADAqC,IACO,CACLrD,KAAK,CAAEsD,GAAH,mBAAetD,UApFN,EAyFnBmC,SAAW,WACT,EAAKxC,SAAS,CACZK,KAAM,MA3FS,EA+FnBoC,UAAY,kBAAM,EAAKrC,MAAMC,KAAKsC,QAAO,SAAAmB,GAAC,OAAKA,EAAE1C,QAAM2C,QA7FrD,EAAK3D,MAAQ,CACXC,KAAMR,EAAMQ,KACZuC,aAAc,OAJC,E,qDAiGT,IAAD,EACwBpC,KAAKJ,MAA5BC,EADD,EACCA,KAAMuC,EADP,EACOA,aACRoB,EAAe3D,EAAKsC,QAAO,YAAe,IAAZvB,EAAW,EAAXA,KAClC,OAAOwB,GACL,IAAK,SACH,OAAQxB,EACV,IAAK,YACH,OAAOA,EACT,QACE,OAAO,MAIb,OACE,6BAASK,UAAU,WACjB,4BAAQA,UAAU,UAChB,qCACA,kBAAC,EAAD,CAAayB,QAAS1C,KAAK0C,WAE7B,6BAASzB,UAAU,QACjB,kBAACwC,EAAD,CACE5D,KAAM2D,EACNjD,SAAUP,KAAKO,SACfC,aAAcR,KAAKQ,aACnBC,OAAQT,KAAKS,OACbC,QAASV,KAAKU,UAChB,kBAAC,EAAD,CAAQsB,SAAUhC,KAAKgC,SAAUC,UAAWjC,KAAKiC,WAC/C,kBAAC,EAAOC,YAAR,CAAoBC,OAAQnC,KAAKmC,OAAQC,aAAcA,W,GA7HlCZ,IAAMC,WCAjC5B,EAAO,CACX,WACA,QACA,SACA8B,KAAI,SAACC,GAAD,MAAW,CACf9B,MAAO8B,EACPjB,GAAIyC,MACJrD,KAAMO,KAAK+C,MACXzC,MAAM,EACNC,SAAS,MAGX6C,IAASC,OAAO,kBAAC,EAAD,CAAK9D,KAAMA,IAAU+D,SAASC,eAAe,W","file":"static/js/main.2edf1b39.chunk.js","sourcesContent":["import React from 'react';\r\nimport cn from 'classnames';\r\nimport { formatDistanceToNow } from 'date-fns';\r\n\r\nexport default class Task extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      editValue: props.data.label,\r\n      time: props.data.time\r\n    }\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      editValue: e.target.value\r\n    })\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.tick()\r\n    this.timerID = setInterval(\r\n      () => this.tick(),\r\n      1000\r\n    );\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.timerID);\r\n  }\r\n\r\n  tick() {\r\n    const { time } = this.props.data\r\n    this.setState({\r\n      time: formatDistanceToNow(new Date(time))\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { editValue, time } = this.state\r\n    const { data, onDelete, onToggleDone, onEdit, offEdit } = this.props\r\n    const { label, id, done, editing } = data\r\n    const classes = cn({\r\n      completed: done,\r\n      editing: editing\r\n    })\r\n    return (\r\n      <li className={classes} id={id}>\r\n        <div className=\"view\">\r\n          <input className=\"toggle\" type=\"checkbox\" checked={done} onChange={onToggleDone}/>\r\n          <label>\r\n            <span className=\"description\">{label}</span>\r\n            <span className=\"created\">created {time} ago</span>\r\n          </label>\r\n          <button className=\"icon icon-edit\" onClick={onEdit}></button>\r\n          <button className=\"icon icon-destroy\" onClick={onDelete}></button>\r\n        </div>\r\n        {editing && <form className='editing-wrapper' onSubmit={offEdit(id, editValue)}>\r\n          <input\r\n            name='input'\r\n            type=\"text\"\r\n            className=\"edit\"\r\n            value={editValue}\r\n            onChange={this.handleChange}/>\r\n          <button type='submit'>OK</button>\r\n        </form>}\r\n      </li>\r\n    )\r\n  }\r\n}","import React from 'react';\r\nimport Task from './Task'\r\n\r\nexport default ({ data, onDelete, onToggleDone, onEdit, offEdit }) => {\r\n  const list = data.map((item) => <Task\r\n    key={item.id}\r\n    data={item}\r\n    onDelete={onDelete(item.id)}\r\n    onToggleDone={onToggleDone(item.id)}\r\n    onEdit={onEdit(item.id)}\r\n    offEdit={offEdit} />)\r\n  return (\r\n    <ul className=\"todo-list\">\r\n      {list}\r\n    </ul>\r\n  )\r\n}","import React from 'react';\r\nimport cn from 'classnames'\r\n\r\nconst TasksFilter = ({ filter, activeFilter }) => {\r\n  const buttons = [\r\n    { label: 'All', id: 'all'},\r\n    { label: 'Active', id: 'active'},\r\n    { label: 'Completed', id: 'completed'}\r\n  ].map(({ label, id }) => {\r\n    const classes = cn({\r\n      selected: activeFilter === id\r\n    })\r\n    return <li key={id}>\r\n      <button className={classes} id={id}>{label}</button>\r\n    </li>\r\n  })\r\n\r\n  return (\r\n    <ul className=\"filters\" onClick={filter}>\r\n      {buttons}\r\n    </ul>\r\n  )\r\n}\r\n\r\nexport default class Footer extends React.Component {\r\n  static TasksFilter = TasksFilter\r\n  \r\n  render() {\r\n    const { children, clearAll, itemsLeft } = this.props\r\n    return (\r\n      <footer className=\"footer\">\r\n        <span className=\"todo-count\">{itemsLeft()} items left</span>\r\n        {children}\r\n        <button className=\"clear-completed\" onClick={clearAll}>Clear completed</button>\r\n      </footer>\r\n    )\r\n  }\r\n}","import React from 'react';\r\n\r\nexport default class NewTaskForm extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      value: ''\r\n    }\r\n  }\r\n\r\n  handleInput = (e) => {\r\n    this.setState({\r\n      value: e.target.value\r\n    })\r\n  }\r\n\r\n  clear = () => {\r\n    this.setState({\r\n      value: ''\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { value } = this.state\r\n    const { addItem } = this.props\r\n    return (\r\n      <form className='adding-wrapper' onSubmit={addItem(value, this.clear)}>\r\n        <input\r\n          className=\"new-todo\"\r\n          placeholder=\"What needs to be done?\"\r\n          autoFocus value={value}\r\n          onChange={this.handleInput} />\r\n        <button type='submit'>ADD</button>\r\n      </form>\r\n    )\r\n  }\r\n}","import React from 'react';\r\nimport TaskList from './TaskList';\r\nimport Footer from './Footer';\r\nimport NewTaskForm from './NewTaskForm';\r\nimport uniqid from 'uniqid';\r\n\r\nexport default class App extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      data: props.data,\r\n      activeFilter: 'all'\r\n    }\r\n  }\r\n  \r\n  onToggleDone = (currentId) => () => {\r\n    this.setState(({ data }) => {\r\n      const newData = data.map((item) => {\r\n        const { done, ...otherProps} = item\r\n        if (item.id === currentId) return {\r\n          ...otherProps,\r\n          done: !done,\r\n        }\r\n        return item\r\n      })\r\n      return ({\r\n        data: newData\r\n      })\r\n    })\r\n  }\r\n\r\n  onEdit = (currentId) => (e) => {\r\n    this.setState(({ data }) => {\r\n      const newData = data.map((item) => {\r\n        const { editing, ...otherProps} = item\r\n        if (item.id === currentId) return {\r\n          ...otherProps,\r\n          editing: !editing,\r\n        }\r\n        return item\r\n      })\r\n      return ({\r\n        data: newData\r\n      })\r\n    })\r\n  }\r\n\r\n  offEdit = (currentId, val) => (e) => {\r\n    e.preventDefault()\r\n    if (val === '') return\r\n    this.setState(({ data }) => {\r\n      const newData = data.map((item) => {\r\n        const { editing, label, ...otherProps} = item\r\n        if (item.id === currentId) return {\r\n          ...otherProps,\r\n          editing: !editing,\r\n          label: val,\r\n        }\r\n        return item\r\n      })\r\n      return ({\r\n        data: newData\r\n      })\r\n    })\r\n  }\r\n\r\n  onDelete = (currentId) => () => {\r\n    this.setState(({ data }) => ({\r\n      data: data.filter(({ id }) => currentId !== id)\r\n    }))\r\n  }\r\n\r\n  filter = (e) => {\r\n    this.setState({\r\n      activeFilter: e.target.id\r\n    })\r\n  }\r\n\r\n  addItem = (val, clearCallback) => (e) => {\r\n    e.preventDefault()\r\n    if (val === '') return\r\n    this.setState(({ data }) => {\r\n      const newItem = {\r\n        label: val,\r\n        id: uniqid(),\r\n        time: Date.now(),\r\n        done: false,\r\n        editing: false\r\n      }\r\n      clearCallback()\r\n      return {\r\n        data: [newItem, ...data]\r\n      }\r\n    })\r\n  }\r\n\r\n  clearAll = () => {\r\n    this.setState({\r\n      data: []\r\n    })\r\n  }\r\n\r\n  itemsLeft = () => this.state.data.filter(i => !i.done).length\r\n\r\n  render() {\r\n    const { data, activeFilter } = this.state\r\n    const filteredData = data.filter(({ done }) => {\r\n      switch(activeFilter) {\r\n        case 'active':\r\n          return !done\r\n        case 'completed':\r\n          return done\r\n        default:\r\n          return true\r\n      }\r\n    })\r\n    \r\n    return (\r\n      <section className=\"todoapp\">\r\n        <header className=\"header\">\r\n          <h1>todos</h1>\r\n          <NewTaskForm addItem={this.addItem} />\r\n        </header>\r\n        <section className=\"main\">\r\n          <TaskList \r\n            data={filteredData}\r\n            onDelete={this.onDelete}\r\n            onToggleDone={this.onToggleDone}\r\n            onEdit={this.onEdit}\r\n            offEdit={this.offEdit} />\r\n          <Footer clearAll={this.clearAll} itemsLeft={this.itemsLeft} >\r\n            <Footer.TasksFilter filter={this.filter} activeFilter={activeFilter} />\r\n          </Footer>\r\n        </section>\r\n      </section>\r\n    )\r\n  }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App'\nimport uniqid from 'uniqid'\n\nconst data = [\n  'text1asd',\n  'text2',\n  'text3',\n].map((item) => ({\n  label: item,\n  id: uniqid(),\n  time: Date.now(),\n  done: false,\n  editing: false,\n}))\n\nReactDOM.render(<App data={data} />, document.getElementById('root')\n);\n"],"sourceRoot":""}